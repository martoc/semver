---
name: build
on:
  pull_request:
    branches:
      - main
      - release/**
  push:
    branches:
    - main
    - release/**
jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.0'
      - name: Init build
        run: |
          export VERSION=${GITHUB_SHA:0:7}
          export BIN_NAME=$(basename `pwd`)
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "BIN_NAME=$BIN_NAME" >> "$GITHUB_ENV"
          make init
      - name: Build
        run: make build
      - name: Run Integration Tests
        run: make run-integration-tests
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: target/coverage.out
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Create GitHub Releases
        run: |
          TAG_NAME="v$VERSION"
          RESPONSE=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/json" -X POST -d "{\"tag\":\"$TAG_NAME\",\"message\":\"Tagging release $TAG_NAME\",\"object\":\"$(git rev-parse HEAD)\",\"type\":\"commit\"}" "https://api.github.com/repos/${{ github.repository }}/git/tags")
          TAG_SHA=$(echo "$RESPONSE" | jq -r '.sha')
          if [ "$TAG_SHA" != "" ]; then
            echo "Failed to create tag"
            exit 1
          fi
          RESPONSE=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/json" -X POST -d "{\"ref\":\"refs/tags/$TAG_NAME\",\"sha\":\"$tag_sha\"}" "https://api.github.com/repos/${{ github.repository }}/git/refs")
          if [ "$(echo "$RESPONSE" | jq -r '.ref')" != "refs/tags/$TAG_NAME" ]; then
            echo "Failed to create ref"
            exit 1
          fi
          RESPONSE=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/json" -X POST -d "{\"tag_name\":\"$TAG_NAME\",\"name\":\"$TAG_NAME\"}" "https://api.github.com/repos/${{ github.repository }}/releases")
          RELEASE_ID=$(echo "$RESPONSE" | jq -r '.id')
          if [ "$RELEASE_ID" = "" ]; then
            echo "Failed to create github release"
            exit 1
          fi
          RESPONSE=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" --data-binary @"target/$BIN_NAME" "https://uploads.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets?name=$BIN_NAME")
          if [[ "$(echo "$RESPONSE" | jq -r '.id')" != null ]]; then
            echo "Asset uploaded successfully!"
          else
            echo "Failed to upload asset. RESPONSE: $RESPONSE"
            exit 1
          fi
