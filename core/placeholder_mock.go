// Code generated by MockGen. DO NOT EDIT.
// Source: placeholder.go

// Package core is a generated GoMock package.
package core

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPlaceHolder is a mock of PlaceHolder interface.
type MockPlaceHolder struct {
	ctrl     *gomock.Controller
	recorder *MockPlaceHolderMockRecorder
}

// MockPlaceHolderMockRecorder is the mock recorder for MockPlaceHolder.
type MockPlaceHolderMockRecorder struct {
	mock *MockPlaceHolder
}

// NewMockPlaceHolder creates a new mock instance.
func NewMockPlaceHolder(ctrl *gomock.Controller) *MockPlaceHolder {
	mock := &MockPlaceHolder{ctrl: ctrl}
	mock.recorder = &MockPlaceHolderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPlaceHolder) EXPECT() *MockPlaceHolderMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockPlaceHolder) Get() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Get")
}

// Get indicates an expected call of Get.
func (mr *MockPlaceHolderMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockPlaceHolder)(nil).Get))
}
